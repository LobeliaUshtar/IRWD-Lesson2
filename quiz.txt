1. Name what each of the below is:
    a = 1
      a is a local variable, and is a Fixnum object with value 1 
    @a = 2
      @a is an instance variable is assigned the value of 2 (a fixnum)
    user = User.new
      user is a new instance object of class User
    user.name
      object user is calling the name getter instance method
    user.name = "Joe"
      object user is assigning "Joe" to the name setter instance method

2. How does a class mixin a module?
    module Answer2
    end

    class Quiz
      include Answer2
    end

3. What's the difference between class variables and instance variables?
    @instance_variable #not shared with class descendants
    @@class_variable #is shared with all class descendants

4. What does attr_accessor do?
    it allows an instance variable to be read and written from outside the class.  it sets the getter and setter

5. How would you describe this expression: Dog.some_method
    the class Dog has a method called some_method

6. In Ruby, what's the difference between subclassing and mixing in modules?
    mixin modules allows it to be used by any class.  a subclass is dependant on a superclass

7. Given that I can instantiate a user like this: User.new('Bob'), what would the initialize method look like for the User class?

    class User
      attr_accessor :name
      def initialize(name)
        @name = name
      end
    end

8. Can you call instance methods of the same class from other instance methods in that class?
    Yes

9. When you get stuck, what's the process you use to try to trap the error?
    binding.pry from the pry gem

    require 'pry'
    # miscellaneous code
    binding.pry
    # more miscellaneous code